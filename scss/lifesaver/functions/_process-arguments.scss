//
// + Process arguments
// =============================================================================


@function process-arguments($arguments) {
  $properties: null;
  $values:     null;
  $style:      null; // border
  $color:      null; // border
  $units:      null;
  $scale:      null;
  $flag:       null;

  $styles: none hidden dotted dashed solid double groove ridge inset outset;

  @debug $arguments;

  @each $argument in $arguments {

    // $color
    @if not contains-null($argument) and type-of($argument) == color {
      @if $color == null {
        $color: $argument;
      }
      @else {
        $color: join($color, $argument);
      }
    }
    @else if not contains-null($argument) and type-of($argument) == string {

      // $style
      @if index($styles, $argument) {
        @each $item in $styles {
          @if $argument == $item {
            @if $color == null {
              $style: $argument;
            }
            @else {
              $style: join($style, $argument);
            }
          }
        }
      }

      // $unit
      @if function-exists($argument) {
        @if $units == null {
          $units: $argument;
        }
        @else {
          $units: join($units, $argument);
        }
      }

      // $flag
      @else if str-index($argument, '!') == 1 {
        @if $flag == null {
          $flag: $argument;
        }
      }

      // $properties
      @else if $properties == null {
        $properties: $argument;
      }
      @else {
        $properties: join($properties, $argument);
      }
    }
    @else if contains-null($argument) or type-of($argument) == number {

      // $scale
      @if not contains-null($argument) and unit($argument) == x {
        @if $scale == null {
          $scale: $argument;
        }
      }

      // $values
      @else if $values == null {
        $values: $argument;
      }
      @else {
        $values: join($values, $argument);
      }
    }
  }

  @return (
    properties: $properties,
    values:     compress-matching-values($values),
    style:      $style,
    color:      $color,
    units:      $units,
    scale:      $scale,
    flag:       $flag
  );
}
