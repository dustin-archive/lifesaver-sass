//
// + Size
// =============================================================================


// Size type
@mixin size-type($size-type, $arguments) {
  $values: check-values($arguments);
  $length: length($values);

  @each $value in $values {
    $arguments: remove-item($arguments, $value);
  }

  @if $length == 1 {
    $values: join(nth($values, 1), nth($values, 1));
  }
  @else if $length == 2 {
    $values: join(nth($values, 1), nth($values, 2));
  }

  @if $size-type == size {
    @include width(join(nth($values, 1), $arguments));
    @include height(join(nth($values, 2), $arguments));
  }
  @else if $size-type == min {
    @include min-width(join(nth($values, 1), $arguments));
    @include min-height(join(nth($values, 2), $arguments));
  }
  @else if $size-type == max {
    @include max-width(join(nth($values, 1), $arguments));
    @include max-height(join(nth($values, 2), $arguments));
  }
}

// Types
@mixin size($arguments) {
  @include size-type(size, $arguments);
}

@mixin min-size($arguments) {
  @include size-type(min, $arguments);
}

@mixin max-size($arguments) {
  @include size-type(max, $arguments);
}
