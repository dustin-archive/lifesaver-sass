//
// + Position
// =============================================================================


// Position
@mixin position($arguments) {
  $z: check-z($arguments);
  $flag: check-flag($arguments);

  @if not contains-null($z) {
    $arguments: remove-item($arguments, $z);
  }

  @include save(join(position, $arguments));

  @if not contains-null($z) {
    @if contains-null($flag) {
      z-index: $z;
    }
    @else {
      z-index: join($z, $flag);
    }
  }
}

// Position type
@mixin position-type($type, $arguments) {
  $flag: check-flag($arguments);

  @if contains-null($flag) {
    position: $type;
  }
  @else {
    position: join($type, $flag);
  }

  @include position($arguments);
}

// Types
@mixin position-absolute($arguments) {
  @include position-type(absolute, $arguments);
}

@mixin position-fixed($arguments) {
  @include position-type(fixed, $arguments);
}

@mixin position-relative($arguments) {
  @include position-type(relative, $arguments);
}

@mixin position-static($arguments) {
  @include position-type(static, $arguments);
}

@mixin position-sticky($arguments) {
  @include position-type(sticky, $arguments);
}

// Reset types
@mixin position-inherit($arguments) {
  @include position-type(inherit, $arguments);
}

@mixin position-initial($arguments) {
  @include position-type(initial, $arguments);
}

@mixin position-unset($arguments) {
  @include position-type(unset, $arguments);
}

// Aliases
@mixin absolute($arguments) {
  @include position-absolute($arguments);
}

@mixin fixed($arguments) {
  @include position-fixed($arguments);
}

@mixin relative($arguments) {
  @include position-relative($arguments);
}

@mixin static($arguments) {
  @include position-static($arguments);
}

@mixin sticky($arguments) {
  @include position-sticky($arguments);
}
