//
// + Safe convert
// =============================================================================


// Convert check type
@function convert-check-type($function, $value) {
  @if type-of($value) == string or is-null($value) {
    @return $value;
  }
  @else {
    @return call($function, $value);
  }
}

// Convert expressions
@function ceil-convert-expression($value) {
  @return ceil($value) / 16;
}

@function floor-convert-expression($value) {
  @return floor($value) / 16;
}

@function round-convert-expression($value) {
  @return round($value) / 16;
}

@function convert-expression($value) {
  @return $value / 16;
}

@function safe-expression($value) {
  @return round($value * 16) / 16;
}

@function safe-convert-expression($value) {
  @return round($value * 16) / 256;
}

// Convert
@function ceil-convert($value) {
  @return convert-check-type('ceil-expression', $value);
}

@function floor-convert($value) {
  @return convert-check-type('floor-expression', $value);
}

@function round-convert($value) {
  @return convert-check-type('round-expression', $value);
}

@function convert($value) {
  @return convert-check-type('convert-expression', $value);
}

@function safe($value) {
  @return convert-check-type('safe-expression', $value);
}

@function safe-convert($value) {
  @return convert-check-type('safe-convert-expression', $value);
}
