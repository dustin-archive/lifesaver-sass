// LifeSaver
// November 19, 2014
// The MIT License (MIT)
// Copyright (c) 2014 Dustin Dowell
// http://github.com/dustindowell22/lifesaver


@mixin ls( $property-list, $value-list, $unit-list: null, $scale: null, $important: null ) {
	$length: length( $value-list );
	$important: if( $important == important, !important, null );

	@each $property in $property-list {

		//
		// + Splits into multiple properties
		//

		@if skippable( $value-list ) or $property == position or $property == size  {

			// Set scope
			$suffix-map: ();

			@if $length == 4 {
				$suffix-map: (
					top:    nth( $value-list, 1 ),
					right:  nth( $value-list, 2 ),
					bottom: nth( $value-list, 3 ),
					left:   nth( $value-list, 4 )
				);
			}
			@else if $length == 2 {
				@if $property == size {
					$suffix-map: (
						width:  nth( $value-list, 1 ),
						height: nth( $value-list, 2 )
					);
				}
				@else {
					$value-1: nth( $value-list, 1 );
					$value-2: nth( $value-list, 2 );

					$suffix-map: (
						top:    $value-1,
						right:  $value-2,
						bottom: $value-1,
						left:   $value-2
					);
				}
			}

			@each $unit in $unit-list {
				@each $suffix-key in map-keys( $suffix-map ) {
					$value: map-get( $suffix-map, $suffix-key );

					// Append suffix when needed
					@if $property != position and $property != size {
						$suffix-key: $property + '-' + $suffix-key;
					}

					// Ignore x and null
					@if not skippable( $value ) {

						// Output
						@if $unit == em {
							#{ $suffix-key }: append( em( $value, $scale ), $important );
						}
						@else if $unit == rem {
							#{ $suffix-key }: append( rem( $value, $scale ), $important );
						}
						@else if $unit == px {
							#{ $suffix-key }: append( px( $value, $scale ), $important );
						}
						@else if $unit == pct {
							#{ $suffix-key }: append( pct( $value, $scale ), $important );
						}
						@else if skip( $unit, null ) or $value == 0 or type-of( $value ) == string {
							#{ $suffix-key }: append( $value, $important );
						}
						@else {
							@error 'Mayday! Mayday!    LifeSaver: You used an invalid unit type.';
						}
					}
				}
			}
		}

		//
		// + Concatenates shorthand values
		//

		// Ensures lists of 3 or lists greater than 4 are not processed
		@else if $length == 1 or $length == 2 or $length == 4 {
			@each $unit in $unit-list {

				// Set scope
				$result: null;

				@each $value in $value-list {

					// Output
					@if $unit == em {
						$result: append( $result, em( $value, $scale ) );
					}
					@else if $unit == rem {
						$result: append( $result, rem( $value, $scale ) );
					}
					@else if $unit == px {
						$result: append( $result, px( $value, $scale ) );
					}
					@else if $unit == pct {
						$result: append( $result, pct( $value, $scale ) );
					}
					@else if skip( $unit, null ) or $value == 0 or type-of( $value ) == string {
						$result: append( $result, $value );
					}
					@else {
						@error 'Mayday! Mayday!    LifeSaver: You used an invalid unit type.';
					}
				}

				#{ $property }: append( $result, $important );
			}
		}
	}
}
